stages:
  - test
  - build
  - package
  - release
  - deploy
  # - dast

include:
   - template: Security/SAST.gitlab-ci.yml
   - template: Code-Quality.gitlab-ci.yml
   - template: Jobs/Dependency-Scanning.gitlab-ci.yml
   - template: Jobs/Secret-Detection.gitlab-ci.yml

variables:
  VERSION: ""

  #  - template: DAST.gitlab-ci.yml
## Testing Stage ##
code_quality:
  stage: test
  tags:
    - docker-ci-auto-cq
  artifacts:
    paths:
      - gl-code-quality-report.json
    reports:
      codequality: gl-code-quality-report.json
  when: always
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"


gemnasium-maven-dependency_scanning:
  extends:
    - .ds-analyzer
    - .cyclonedx-reports
  variables:
    DS_ANALYZER_NAME: "gemnasium-maven"
  stage: test
  tags:
    - docker-ci-auto
  artifacts:
    paths:
     - gl-sbom-*.cdx.json
     - gl-dependency-scanning-report.json
    expire_in: never
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"


sast:
  stage: test
  tags:
    - docker-ci-auto
  artifacts:
    name: sast
    paths:
      - gl-sast-report.json
    reports:
      sast: gl-sast-report.json
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
 
secret_detection:
  stage: test
  tags:
    - docker-ci-auto
  variables:
    SECRET_DETECTION_HISTORIC_SCAN: "true"
  artifacts:
    paths:
      - gl-secret_detection-report.json
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"

## Build Stage ##
build-code:
  stage: build
  tags:
    - shell-ci-auto
  script:
    - echo "==== Project Building Started $VERSION====="
    - mvn clean install
    - echo "code build Successfull..."
    - ls
  artifacts:
    paths:
      - target/*.war
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"


## Package Artifact
package-artifact:
  stage: package
  tags:
    - shell-ci-auto
  script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ${CI_PROJECT_DIR}/target/*.war "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_IID}/onlinebookstore.war"'
  needs: [build-code]
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"

## Release Using Git Tag

webapp-release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  tags:
    - docker-ci-auto
  script:
    - echo "Webapp release job"
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: 'webapp release $CI_PIPELINE_IID'
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "push"



deploy:
  stage: deploy
  variables:
    VERSION: "$VERSION"
  trigger:
    include:
      - local: deploy.yml
  only:
    variables:
        - $deploy=="dev"  







