stages:
  - deploy
  - release
  - dast

include:
- template: DAST.gitlab-ci.yml


deploy-dev:
  stage: deploy
  tags:
    - shell-ci-auto
  variables:
        ENV: "dev"
        DEV_PATH: "/opt/tomcat/webapps"
  script:
    - echo "Deployment for Dev Environment with $VERSION"
    - mkdir target
    - cd target
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" -O "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_COMMIT_REF_NAME}/${VERSION}/onlinebookstore.war"'
    - cd ..
    - cp target/*.war $DEV_PATH
    - rm -r target
  environment:
    name: $ENV
  # needs:
  #   - build-code
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH != 'stage' && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH


## Deployment on stage
deploy-stage:
  stage: deploy
  tags:
    - shell-ci-auto
  variables:
        ENV: "stage"
        VERSION: "$CI_PIPELINE_ID"
        STAGE_PATH: "/mnt/volume/stage-env/webapps"
  script:
    - echo "Deployment for Dev Environment"
    - cp $CI_PROJECT_DIR/target/*.war $STAGE_PATH
  environment:
    name: $ENV
  # needs:
  #   - build-code
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH == 'stage'



webapp-release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  tags:
    - docker-ci-auto
  script:
    - echo "Webapp release job"
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: 'webapp release $CI_PIPELINE_IID'
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG
      needs: [deploy-production]
    

## Deployment on prod
deploy-production:
  stage: deploy
  tags:
    - shell-ci-auto
  variables:
        ENV: "prod"
        VERSION: "$CI_PIPELINE_ID"
        PROD_PATH: "/mnt/volume/stage-env/webapps"
  script:
    - echo "Deployment for Prod Environment with $VERSION"
    - mkdir target
    - cd target
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" -O "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_COMMIT_REF_NAME}/${VERSION}/onlinebookstore.war"'
    - cd ..
    - cp target/*.war $PROD_PATH
    - rm -r target
  environment:
    name: $ENV
  # needs:
  #   - build-code
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

   
dast:
  variables:
    DAST_WEBSITE: http://$APPLICATION_URL:8080/onlinebookstore
    DAST_FULL_SCAN_ENABLED: 'true'
    DAST_SKIP_TARGET_CHECK: 'true'
  stage: dast
  tags:
  - docker-ci-auto
  artifacts:
    paths:
    - gl-dast-report.json
    expire_in: 1 week
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      needs: [deploy-production]
    - if: $CI_COMMIT_BRANCH == 'stage'
      needs: [deploy-stage]
    - if: $CI_COMMIT_BRANCH != 'stage' && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      needs: [deploy-dev]

